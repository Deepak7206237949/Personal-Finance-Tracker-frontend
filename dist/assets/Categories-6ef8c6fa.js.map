{"version":3,"file":"Categories-6ef8c6fa.js","sources":["../../src/pages/Categories.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { AuthContext } from '../contexts/AuthContext';\nimport api from '../services/api';\n\nexport default function Categories() {\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [newCategoryName, setNewCategoryName] = useState('');\n  const [newCategoryAmount, setNewCategoryAmount] = useState('');\n  const [isAdding, setIsAdding] = useState(false);\n  const [sortBy, setSortBy] = useState('name'); // 'name', 'amount', 'transactions', 'date'\n  const [sortOrder, setSortOrder] = useState('asc'); // 'asc', 'desc'\n  const [searchTerm, setSearchTerm] = useState('');\n  const [editingCategory, setEditingCategory] = useState(null);\n  const [editName, setEditName] = useState('');\n  const [editAmount, setEditAmount] = useState('');\n  const { user } = useContext(AuthContext);\n\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n\n  // Auto-clear success message after 3 seconds\n  useEffect(() => {\n    if (success) {\n      const timer = setTimeout(() => {\n        setSuccess(null);\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [success]);\n\n  // Filter and sort categories based on current settings\n  const filteredAndSortedCategories = React.useMemo(() => {\n    // First filter by search term\n    const filtered = categories.filter(category =>\n      category.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n    // Then sort the filtered results\n    const sorted = [...filtered].sort((a, b) => {\n      let aValue, bValue;\n\n      switch (sortBy) {\n        case 'amount':\n          aValue = a.totalAmount || 0;\n          bValue = b.totalAmount || 0;\n          break;\n        case 'transactions':\n          aValue = a.transactionCount || 0;\n          bValue = b.transactionCount || 0;\n          break;\n        case 'date':\n          aValue = new Date(a.createdAt);\n          bValue = new Date(b.createdAt);\n          break;\n        case 'name':\n        default:\n          aValue = a.name.toLowerCase();\n          bValue = b.name.toLowerCase();\n          break;\n      }\n\n      if (aValue < bValue) return sortOrder === 'asc' ? -1 : 1;\n      if (aValue > bValue) return sortOrder === 'asc' ? 1 : -1;\n      return 0;\n    });\n\n    return sorted;\n  }, [categories, sortBy, sortOrder, searchTerm]);\n\n  const handleSort = (field) => {\n    if (sortBy === field) {\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortBy(field);\n      setSortOrder('asc');\n    }\n  };\n\n  const getSortIcon = (field) => {\n    if (sortBy !== field) return '↕️';\n    return sortOrder === 'asc' ? '↑' : '↓';\n  };\n\n  const fetchCategories = async () => {\n    try {\n      setLoading(true);\n      const response = await api.get('/categories');\n      setCategories(response.data);\n      setError(null);\n    } catch (err) {\n      setError('Failed to fetch categories');\n      console.error('Error fetching categories:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAddCategory = async (e) => {\n    e.preventDefault();\n    const trimmedName = newCategoryName.trim();\n\n    if (!trimmedName) {\n      setError('Category name cannot be empty');\n      return;\n    }\n\n    if (trimmedName.length < 2) {\n      setError('Category name must be at least 2 characters long');\n      return;\n    }\n\n    try {\n      setIsAdding(true);\n      setError(null);\n      setSuccess(null);\n\n      const categoryData = {\n        name: trimmedName,\n        amount: parseFloat(newCategoryAmount) || 0\n      };\n\n      await api.post('/categories', categoryData);\n      setNewCategoryName('');\n      setNewCategoryAmount('');\n      setSuccess('Category added successfully!');\n      await fetchCategories(); // Refresh the list\n    } catch (err) {\n      console.error('Error adding category:', err);\n      if (err.response?.status === 400) {\n        setError(err.response.data?.error || 'Category already exists or invalid data');\n      } else {\n        setError('Failed to add category. Please try again.');\n      }\n    } finally {\n      setIsAdding(false);\n    }\n  };\n\n  const handleDeleteCategory = async (categoryId) => {\n    if (!window.confirm('Are you sure you want to delete this category?')) {\n      return;\n    }\n\n    try {\n      setError(null);\n      setSuccess(null);\n      await api.delete(`/categories/${categoryId}`);\n      setSuccess('Category deleted successfully!');\n      await fetchCategories(); // Refresh the list\n    } catch (err) {\n      setError(err.response?.data?.error || 'Failed to delete category');\n    }\n  };\n\n  const handleEditCategory = (category) => {\n    setEditingCategory(category.id);\n    setEditName(category.name);\n    setEditAmount(category.amount?.toString() || '');\n  };\n\n  const handleSaveEdit = async () => {\n    if (!editName.trim()) {\n      setError('Category name cannot be empty');\n      return;\n    }\n\n    try {\n      setError(null);\n      setSuccess(null);\n\n      const updateData = {\n        name: editName.trim(),\n        amount: parseFloat(editAmount) || 0\n      };\n\n      await api.put(`/categories/${editingCategory}`, updateData);\n      setEditingCategory(null);\n      setEditName('');\n      setEditAmount('');\n      setSuccess('Category updated successfully!');\n      await fetchCategories();\n    } catch (err) {\n      setError(err.response?.data?.error || 'Failed to update category');\n    }\n  };\n\n  const handleCancelEdit = () => {\n    setEditingCategory(null);\n    setEditName('');\n    setEditAmount('');\n  };\n\n  if (loading) {\n    return (\n      <div className=\"container\">\n        <div className=\"loading\">\n          <div className=\"spinner\"></div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"form-container\">\n        <h1>Categories Management</h1>\n        \n        {error && (\n          <div className=\"error-message\">\n            {error}\n          </div>\n        )}\n\n        {success && (\n          <div style={{\n            background: '#d4edda',\n            color: '#155724',\n            padding: '12px',\n            borderRadius: '8px',\n            marginBottom: '20px',\n            border: '1px solid #c3e6cb'\n          }}>\n            {success}\n          </div>\n        )}\n\n        {/* Search Bar */}\n        <div style={{ marginBottom: '20px' }}>\n          <input\n            type=\"text\"\n            placeholder=\"Search categories...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            style={{\n              width: '100%',\n              padding: '12px',\n              border: '2px solid #e1e5e9',\n              borderRadius: '8px',\n              fontSize: '16px',\n              outline: 'none',\n              transition: 'border-color 0.3s ease'\n            }}\n            onFocus={(e) => e.target.style.borderColor = '#007bff'}\n            onBlur={(e) => e.target.style.borderColor = '#e1e5e9'}\n          />\n        </div>\n\n        {/* Add New Category Form - Only for Admin */}\n        {user?.role === 'ADMIN' && (\n          <form onSubmit={handleAddCategory} style={{ marginBottom: '30px' }}>\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>Category Name</label>\n                <input\n                  className=\"form-input\"\n                  type=\"text\"\n                  value={newCategoryName}\n                  onChange={(e) => setNewCategoryName(e.target.value)}\n                  placeholder=\"Enter category name\"\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Initial Amount / Budget</label>\n                <input\n                  className=\"form-input\"\n                  type=\"number\"\n                  step=\"0.01\"\n                  min=\"0\"\n                  value={newCategoryAmount}\n                  onChange={(e) => setNewCategoryAmount(e.target.value)}\n                  placeholder=\"Enter amount (optional)\"\n                />\n              </div>\n            </div>\n            <div className=\"form-actions\">\n              <button \n                type=\"submit\" \n                className=\"btn btn-success\"\n                disabled={isAdding}\n              >\n                {isAdding ? 'Adding...' : 'Add Category'}\n              </button>\n            </div>\n          </form>\n        )}\n\n        {/* Summary Cards */}\n        <div style={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\n          gap: '20px',\n          marginBottom: '30px'\n        }}>\n          <div style={{\n            background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n            color: 'white',\n            padding: '20px',\n            borderRadius: '12px',\n            textAlign: 'center'\n          }}>\n            <h3 style={{ margin: '0 0 10px 0', fontSize: '16px' }}>\n              {searchTerm ? 'Filtered Categories' : 'Total Categories'}\n            </h3>\n            <p style={{ margin: 0, fontSize: '24px', fontWeight: 'bold' }}>\n              {searchTerm ? filteredAndSortedCategories.length : categories.length}\n              {searchTerm && <span style={{ fontSize: '14px', opacity: 0.8 }}> of {categories.length}</span>}\n            </p>\n          </div>\n          <div style={{\n            background: 'linear-gradient(135deg, #28a745 0%, #20c997 100%)',\n            color: 'white',\n            padding: '20px',\n            borderRadius: '12px',\n            textAlign: 'center'\n          }}>\n            <h3 style={{ margin: '0 0 10px 0', fontSize: '16px' }}>\n              {searchTerm ? 'Filtered Budget' : 'Total Budget'}\n            </h3>\n            <p style={{ margin: 0, fontSize: '24px', fontWeight: 'bold' }}>\n              ${(searchTerm ? filteredAndSortedCategories : categories).reduce((sum, cat) => sum + (cat.amount || 0), 0).toFixed(2)}\n            </p>\n          </div>\n          <div style={{\n            background: 'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)',\n            color: 'white',\n            padding: '20px',\n            borderRadius: '12px',\n            textAlign: 'center'\n          }}>\n            <h3 style={{ margin: '0 0 10px 0', fontSize: '16px' }}>\n              {searchTerm ? 'Filtered Expenses' : 'Total Expenses'}\n            </h3>\n            <p style={{ margin: 0, fontSize: '24px', fontWeight: 'bold' }}>\n              ${(searchTerm ? filteredAndSortedCategories : categories).reduce((sum, cat) => sum + (cat.totalAmount || 0), 0).toFixed(2)}\n            </p>\n          </div>\n          <div style={{\n            background: 'linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)',\n            color: 'white',\n            padding: '20px',\n            borderRadius: '12px',\n            textAlign: 'center'\n          }}>\n            <h3 style={{ margin: '0 0 10px 0', fontSize: '16px' }}>\n              {searchTerm ? 'Filtered Transactions' : 'Total Transactions'}\n            </h3>\n            <p style={{ margin: 0, fontSize: '24px', fontWeight: 'bold' }}>\n              {(searchTerm ? filteredAndSortedCategories : categories).reduce((sum, cat) => sum + (cat.transactionCount || 0), 0)}\n            </p>\n          </div>\n        </div>\n\n        {/* Categories List */}\n        <div className=\"table-container\">\n          <table className=\"table\" style={{ width: '100%' }}>\n            <thead>\n              <tr>\n                <th\n                  style={{ cursor: 'pointer', userSelect: 'none' }}\n                  onClick={() => handleSort('name')}\n                  title=\"Click to sort by name\"\n                >\n                  Category Name {getSortIcon('name')}\n                </th>\n                <th\n                  style={{ cursor: 'pointer', userSelect: 'none' }}\n                  onClick={() => handleSort('amount')}\n                  title=\"Click to sort by initial amount\"\n                >\n                  Initial Amount {getSortIcon('amount')}\n                </th>\n                <th>Total Spent</th>\n                <th\n                  style={{ cursor: 'pointer', userSelect: 'none' }}\n                  onClick={() => handleSort('transactions')}\n                  title=\"Click to sort by transaction count\"\n                >\n                  Transactions {getSortIcon('transactions')}\n                </th>\n                <th\n                  style={{ cursor: 'pointer', userSelect: 'none' }}\n                  onClick={() => handleSort('date')}\n                  title=\"Click to sort by creation date\"\n                >\n                  Created Date {getSortIcon('date')}\n                </th>\n                {user?.role === 'ADMIN' && <th>Actions</th>}\n              </tr>\n            </thead>\n            <tbody>\n              {filteredAndSortedCategories.length === 0 ? (\n                <tr>\n                  <td colSpan={user?.role === 'ADMIN' ? 6 : 5} style={{ textAlign: 'center', padding: '40px' }}>\n                    No categories found\n                  </td>\n                </tr>\n              ) : (\n                filteredAndSortedCategories.map((category) => {\n                  const maxAmount = Math.max(...filteredAndSortedCategories.map(c => c.totalAmount || 0));\n                  const isHighSpending = category.totalAmount > maxAmount * 0.7 && category.totalAmount > 0;\n                  const isEditing = editingCategory === category.id;\n\n                  return (\n                  <tr key={category.id} style={{\n                    backgroundColor: isHighSpending ? '#fff5f5' : 'transparent',\n                    borderLeft: isHighSpending ? '4px solid #dc3545' : 'none'\n                  }}>\n                    <td>\n                      {isEditing ? (\n                        <input\n                          type=\"text\"\n                          value={editName}\n                          onChange={(e) => setEditName(e.target.value)}\n                          style={{ width: '100%', padding: '4px', border: '1px solid #ccc', borderRadius: '4px' }}\n                        />\n                      ) : (\n                        <>\n                          <strong>{category.name}</strong>\n                          {isHighSpending && <span style={{\n                            marginLeft: '8px',\n                            fontSize: '12px',\n                            background: '#dc3545',\n                            color: 'white',\n                            padding: '2px 6px',\n                            borderRadius: '10px'\n                          }}>HIGH</span>}\n                        </>\n                      )}\n                    </td>\n                    <td>\n                      {isEditing ? (\n                        <input\n                          type=\"number\"\n                          step=\"0.01\"\n                          min=\"0\"\n                          value={editAmount}\n                          onChange={(e) => setEditAmount(e.target.value)}\n                          style={{ width: '100%', padding: '4px', border: '1px solid #ccc', borderRadius: '4px' }}\n                        />\n                      ) : (\n                        <span style={{\n                          color: category.amount > 0 ? '#28a745' : '#6c757d',\n                          fontWeight: category.amount > 0 ? 'bold' : 'normal'\n                        }}>\n                          ${category.amount?.toFixed(2) || '0.00'}\n                        </span>\n                      )}\n                    </td>\n                    <td>\n                      <span style={{\n                        color: category.totalAmount > 0 ? '#dc3545' : '#6c757d',\n                        fontWeight: category.totalAmount > 0 ? 'bold' : 'normal'\n                      }}>\n                        ${category.totalAmount?.toFixed(2) || '0.00'}\n                      </span>\n                      {category.amount > 0 && category.totalAmount > 0 && (\n                        <div style={{ fontSize: '12px', color: '#6c757d', marginTop: '2px' }}>\n                          {((category.totalAmount / category.amount) * 100).toFixed(1)}% of budget\n                        </div>\n                      )}\n                    </td>\n                    <td>\n                      <span style={{ color: '#6c757d' }}>\n                        {category.transactionCount || 0} transactions\n                      </span>\n                    </td>\n                    <td>\n                      {new Date(category.createdAt).toLocaleDateString()}\n                    </td>\n                    {user?.role === 'ADMIN' && (\n                      <td>\n                        {isEditing ? (\n                          <div style={{ display: 'flex', gap: '5px' }}>\n                            <button\n                              className=\"btn btn-success\"\n                              onClick={handleSaveEdit}\n                              style={{ fontSize: '12px', padding: '5px 10px' }}\n                            >\n                              Save\n                            </button>\n                            <button\n                              className=\"btn btn-secondary\"\n                              onClick={handleCancelEdit}\n                              style={{ fontSize: '12px', padding: '5px 10px' }}\n                            >\n                              Cancel\n                            </button>\n                          </div>\n                        ) : (\n                          <div style={{ display: 'flex', gap: '5px' }}>\n                            <button\n                              className=\"btn btn-primary\"\n                              onClick={() => handleEditCategory(category)}\n                              style={{ fontSize: '12px', padding: '5px 10px' }}\n                            >\n                              Edit\n                            </button>\n                            <button\n                              className=\"btn btn-danger\"\n                              onClick={() => handleDeleteCategory(category.id)}\n                              style={{ fontSize: '12px', padding: '5px 10px' }}\n                              disabled={category.transactionCount > 0}\n                              title={category.transactionCount > 0 ? 'Cannot delete category with transactions' : 'Delete category'}\n                            >\n                              Delete\n                            </button>\n                          </div>\n                        )}\n                      </td>\n                    )}\n                  </tr>\n                  )\n                })\n              )}\n            </tbody>\n          </table>\n        </div>\n\n        {/* Info for non-admin users */}\n        {user?.role !== 'ADMIN' && (\n          <div style={{ \n            marginTop: '20px', \n            padding: '15px', \n            background: '#f0f8ff', \n            borderRadius: '10px',\n            color: '#666',\n            textAlign: 'center'\n          }}>\n            <p>Categories are managed by administrators. You can view and use these categories when creating transactions.</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":["Categories","categories","setCategories","useState","loading","setLoading","error","setError","success","setSuccess","newCategoryName","setNewCategoryName","newCategoryAmount","setNewCategoryAmount","isAdding","setIsAdding","sortBy","setSortBy","sortOrder","setSortOrder","searchTerm","setSearchTerm","editingCategory","setEditingCategory","editName","setEditName","editAmount","setEditAmount","user","useContext","AuthContext","useEffect","fetchCategories","timer","filteredAndSortedCategories","React","category","b","aValue","bValue","handleSort","field","getSortIcon","response","api","err","handleAddCategory","e","trimmedName","categoryData","_a","_b","handleDeleteCategory","categoryId","handleEditCategory","handleSaveEdit","updateData","handleCancelEdit","jsx","jsxs","sum","cat","maxAmount","c","isHighSpending","isEditing","Fragment"],"mappings":"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"}